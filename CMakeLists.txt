cmake_minimum_required(VERSION 3.10)
project(tsompCC)

# Set C++ standard
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find LLVM package
find_package(LLVM REQUIRED CONFIG)

# Include LLVM directories
list(APPEND CMAKE_PREFIX_PATH "${LLVM_DIR}")
include_directories(${LLVM_INCLUDE_DIRS})
add_definitions(${LLVM_DEFINITIONS})

# Find Flex and Bison packages
find_package(FLEX REQUIRED)
find_package(BISON REQUIRED)

# Flex and Bison input files
set(FLEX_INPUT src/lexer.l)
set(BISON_INPUT src/parser.y)

# Output files generated by Flex and Bison
set(FLEX_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/lexer.cpp)
set(BISON_OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/parser.cpp)
set(BISON_HEADER ${CMAKE_CURRENT_BINARY_DIR}/parser.h)

# Generate the lexer and parser
FLEX_TARGET(MyScanner ${FLEX_INPUT} ${FLEX_OUTPUT})
BISON_TARGET(MyParser ${BISON_INPUT} ${BISON_OUTPUT} COMPILE_FLAGS "--defines=${BISON_HEADER}")

# Add generated files to the project
ADD_FLEX_BISON_DEPENDENCY(MyScanner MyParser)

# Source files
set(SOURCE_FILES
    ${FLEX_OUTPUT}
    ${BISON_OUTPUT}
    src/AST.cpp
    src/codegen.cpp
    src/main.cpp
    src/utils/utils.cpp
)

# Include directories
include_directories(include ${CMAKE_CURRENT_BINARY_DIR})

# Create the executable
add_executable(tsompCC ${SOURCE_FILES})

# Link LLVM libraries
llvm_map_components_to_libnames(LLVM_LIBS
    core
    support
    irreader
)
target_link_libraries(tsompCC ${LLVM_LIBS})